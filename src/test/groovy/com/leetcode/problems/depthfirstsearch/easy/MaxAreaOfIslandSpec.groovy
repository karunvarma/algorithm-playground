package com.leetcode.problems.depthfirstsearch.easy

import com.leetcode.problems.depthfirstsearch.easy.MaxAreaOfIsland.Solution as S
import spock.lang.Specification
import spock.lang.Unroll

class MaxAreaOfIslandSpec extends Specification {

	@Unroll
	def "maxAreaOfIsland"() {

		expect:

			new S().maxAreaOfIsland(grid as int[][]) == output

		where:

			grid                                      || output
			[[0, 1, 0],
			 [1, 1, 1],
			 [0, 1, 0]]                               || 5
			[[0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			 [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
			 [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0],
			 [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]] || 6
			[[0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			 [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
			 [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0],
			 [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]] || 7
			[[0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			 [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
			 [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0],
			 [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			 [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]] || 8
			[[0, 0, 0, 0, 0, 0, 0, 0]]                || 0

	}

}
